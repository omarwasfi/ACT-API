using ACT.DataModels;
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Threading.Tasks;

namespace ACT.Services.OPERA.Mapper
{
    public class Map_OPERA_REPORT_SUN_DETAIL : IMap_OPERA_REPORT_SUN_DETAIL
    {
        public DataTable Map(DataTable operaReport, List<OPERA_REPORT_SUN_DETAIL_Model> oPERA_REPORT_SUN_DETAIL_s, int PSTG_HDR_ID)
        {
            DataTable sunDetailResult = new DataTable();

            foreach (OPERA_REPORT_SUN_DETAIL_Model c in oPERA_REPORT_SUN_DETAIL_s)
            {

                switch (c.ValueType)
                {
                    case "int":
                        sunDetailResult.Columns.Add(new DataColumn(columnName: c.SunAttribute, typeof(int)));
                        break;
                    case "string":
                        sunDetailResult.Columns.Add(new DataColumn(columnName: c.SunAttribute, typeof(String)));
                        break;
                    case "decimal":
                        sunDetailResult.Columns.Add(new DataColumn(columnName: c.SunAttribute, typeof(Decimal)));
                        break;
                    case "datetime":
                        sunDetailResult.Columns.Add(new DataColumn(columnName: c.SunAttribute, typeof(DateTime)));
                        break;
                    case "double":
                        sunDetailResult.Columns.Add(new DataColumn(columnName: c.SunAttribute, typeof(Double)));
                        break;
                    case "short":
                        sunDetailResult.Columns.Add(new DataColumn(columnName: c.SunAttribute, typeof(short)));
                        break;
                }
            }

            int LINE_NUM = 0;
            foreach (DataRow operaReportRow in operaReport.Rows)
            {
                DataRow dataRow = sunDetailResult.NewRow();

                LINE_NUM++;

                foreach (DataColumn dataColumn in sunDetailResult.Columns)
                {
                    string columnName = dataColumn.ColumnName;
                    OPERA_REPORT_SUN_DETAIL_Model oPERA_REPORT_SUN_DETAIL = oPERA_REPORT_SUN_DETAIL_s.Find(x => x.SunAttribute == columnName);
                    if (oPERA_REPORT_SUN_DETAIL.IsConst)
                    {
                        switch (oPERA_REPORT_SUN_DETAIL.ValueType)
                        {
                            case "int":
                                dataRow[columnName] = oPERA_REPORT_SUN_DETAIL.IntValue;
                                break;
                            case "string":
                                dataRow[columnName] = oPERA_REPORT_SUN_DETAIL.StringValue;
                                break;
                            case "decimal":
                                dataRow[columnName] = oPERA_REPORT_SUN_DETAIL.DecimalValue;
                                break;
                            case "datetime":
                                dataRow[columnName] = oPERA_REPORT_SUN_DETAIL.DateTimeValue;
                                break;
                            case "double":
                                dataRow[columnName] = oPERA_REPORT_SUN_DETAIL.DoubleValue;
                                break;
                            case "short":
                                dataRow[columnName] = oPERA_REPORT_SUN_DETAIL.ShortValue;
                                break;
                        }
                        
                    }
                    else if (oPERA_REPORT_SUN_DETAIL.AutoGenerated)
                    {
                        if(oPERA_REPORT_SUN_DETAIL.SunAttribute == "PSTG_HDR_ID")
                        {
                            dataRow[columnName] = PSTG_HDR_ID;
                        }
                        else if(oPERA_REPORT_SUN_DETAIL.SunAttribute == "LINE_NUM")
                        {
                            dataRow[columnName] = LINE_NUM;
                        }
                    }
                    else
                    {
                        dataRow[columnName] = operaReportRow[oPERA_REPORT_SUN_DETAIL.MapWithOPERA];
                    }
                }

                sunDetailResult.Rows.Add(dataRow);
            }

            return sunDetailResult;
        }

    }
}
