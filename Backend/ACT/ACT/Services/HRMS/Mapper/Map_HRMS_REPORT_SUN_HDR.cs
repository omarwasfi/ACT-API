using ACT.DataModels;
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Threading.Tasks;

namespace ACT.Services.HRMS.Mapper
{
    public class Map_HRMS_REPORT_SUN_HDR : IMap_HRMS_REPORT_SUN_HDR
    {
        public DataTable Map(DataTable hrmsReport, List<HRMS_REPORT_SUN_HDR_Model> hRMS_REPORT_SUN_HDR_s)
        {
            DataTable sunHDRResult = new DataTable();

            foreach (HRMS_REPORT_SUN_HDR_Model c in hRMS_REPORT_SUN_HDR_s)
            {
                switch (c.ValueType.ToLower())
                {
                    case "int":
                        sunHDRResult.Columns.Add(new DataColumn(columnName: c.SunAttribute, typeof(int)));
                        break;
                    case "string":
                        sunHDRResult.Columns.Add(new DataColumn(columnName: c.SunAttribute, typeof(String)));
                        break;
                    case "decimal":
                        sunHDRResult.Columns.Add(new DataColumn(columnName: c.SunAttribute, typeof(Decimal)));
                        break;
                    case "datetime":
                        sunHDRResult.Columns.Add(new DataColumn(columnName: c.SunAttribute, typeof(DateTime)));
                        break;
                    case "double":
                        sunHDRResult.Columns.Add(new DataColumn(columnName: c.SunAttribute, typeof(Double)));
                        break;
                    case "short":
                        sunHDRResult.Columns.Add(new DataColumn(columnName: c.SunAttribute, typeof(short)));
                        break;
                }

            }


            DataRow firstOperaRow = hrmsReport.Rows[0];

            DataRow dataRow = sunHDRResult.NewRow();

            foreach (DataColumn dataColumn in sunHDRResult.Columns)
            {
                string columnName = dataColumn.ColumnName;
                HRMS_REPORT_SUN_HDR_Model hRMS_REPORT_SUN_HDR = hRMS_REPORT_SUN_HDR_s.Find(x => x.SunAttribute == columnName);
                if (hRMS_REPORT_SUN_HDR.IsConst)
                {
                    switch (hRMS_REPORT_SUN_HDR.ValueType.ToLower())
                    {
                        case "int":
                            dataRow[columnName] = hRMS_REPORT_SUN_HDR.IntValue;
                            break;
                        case "string":
                            dataRow[columnName] = hRMS_REPORT_SUN_HDR.StringValue;
                            break;
                        case "decimal":
                            dataRow[columnName] = hRMS_REPORT_SUN_HDR.DecimalValue;
                            break;
                        case "datetime":
                            dataRow[columnName] = hRMS_REPORT_SUN_HDR.DateTimeValue;
                            break;
                        case "double":
                            dataRow[columnName] = hRMS_REPORT_SUN_HDR.DoubleValue;
                            break;
                        case "short":
                            dataRow[columnName] = hRMS_REPORT_SUN_HDR.ShortValue;
                            break;
                    }

                }
                else if (hRMS_REPORT_SUN_HDR.AutoGenerated)
                {
                    //dataRow[columnName] = DBNull;
                }
                else
                {
                    dataRow[columnName] = firstOperaRow[hRMS_REPORT_SUN_HDR.MapWithHRMS];
                }

            }

            sunHDRResult.Rows.Add(dataRow);


            return sunHDRResult;
        }
    }
}
